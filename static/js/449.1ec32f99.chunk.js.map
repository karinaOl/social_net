{"version":3,"file":"static/js/449.1ec32f99.chunk.js","mappings":"wLACA,EAA0B,yBAA1B,EAAiE,6BAAjE,EAAuG,wBAAvG,EAA0I,0BAA1I,EAA8K,yB,SCIjKA,EAAU,SAACC,GAEpB,OACI,0BACI,gBAAKC,UAAWC,EAAhB,SAAkCF,EAAMG,a,UCHvCC,EAAc,SAACJ,GAC1B,OACI,gBAAKC,UAAWC,EAAhB,UACI,SAAC,KAAD,CAASG,GAAI,YAAcL,EAAMM,GAAjC,SAAsCN,EAAMO,U,2DCAhDC,GAAcC,EAAAA,EAAAA,GAAiB,IAkBxBC,GAAsBC,EAAAA,EAAAA,GAAkC,CAACC,KAAM,kBAAzCD,EAhBgD,SAACX,GAEhF,OACI,kBAAMa,SAAUb,EAAMc,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GACXV,KAAM,iBACNW,YAAa,qBACbC,SAAU,CAACC,EAAAA,EAAUZ,QAGhC,0C,8BCiBZ,GALyBa,EAAAA,EAAAA,IACrBC,EAAAA,GACAC,EAAAA,EAAAA,KAhBkB,SAACC,GACnB,MAAM,CACFC,YAAaD,EAAMC,YACnBC,OAAQF,EAAMG,KAAKD,WAGF,SAACE,GACtB,MAAM,CACFC,YAAa,SAACC,GACVF,GAASG,EAAAA,EAAAA,IAAmBD,SAKfT,ECxBF,SAACrB,GAMpB,OAAIA,EAAM0B,QAGN,iBAAKzB,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKF,EAAMyB,YAAYO,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC9B,EAAD,CAAwBE,GAAI4B,EAAE5B,GAAIC,KAAM2B,EAAE3B,MAAxB2B,EAAE5B,UAE5D,4BACI,gBAAKL,UAAWC,EAAhB,SACKF,EAAMyB,YAAYU,SAASF,KAAI,SAAAG,GAAC,OAAI,SAACrC,EAAD,CAAoBI,QAASiC,EAAEjC,QAASG,GAAI8B,EAAE9B,IAAhC8B,EAAE9B,UAEzD,SAACI,EAAD,CAAqBG,SAfd,SAACwB,GAChBrC,EAAM6B,YAAYQ,EAAOP,0BAGJ,SAAC,KAAD,CAAUzB,GAAI","sources":["webpack://project_typescript/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__uRzh+\",\"dialogItems\":\"Dialogs_dialogItems__v74VZ\",\"dialog\":\"Dialogs_dialog__WrSZX\",\"messages\":\"Dialogs_messages__0086k\",\"message\":\"Dialogs_message__fIJfv\"};","import { MessageType } from '../../../redux/dialogsReducer'\r\nimport classes from './../Dialogs.module.css'\r\n\r\nexport type MessagePropsType = MessageType\r\n\r\nexport const Message = (props: MessagePropsType) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.message}>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import classes from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { DialogType } from '../../../redux/dialogsReducer';\r\n\r\nexport type DialogItemsPropsType = DialogType\r\n\r\nexport const DialogItems = (props: DialogItemsPropsType) => {\r\n  return(\r\n      <div className={classes.dialog}>\r\n          <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n      </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nexport type AddMessageFormDataType = {\r\n    newMessageBody: string\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nexport const AddMessageForm: React.FC<InjectedFormProps<AddMessageFormDataType>> = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name={\"newMessageBody\"}\r\n                       placeholder={\"Enter your message\"}\r\n                       validate={[required, maxLength50]}\r\n                />\r\n            </div>\r\n            <button>add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddMessageReduxForm = reduxForm<AddMessageFormDataType>({form: \"addMessageForm\"})(AddMessageForm)","import React, {ComponentType} from \"react\";\r\nimport {initialDialogStateType, sendMessageCreator} from '../../redux/dialogsReducer';\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootAppStateType} from \"../../redux/reduxStore\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\ntype MapStateToPropsType = {\r\n    dialogsPage: initialDialogStateType\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    sendMessage: (newMessageBody: string)=>void\r\n}\r\n\r\nexport type DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n\r\nlet mapStateToProps = (state: RootAppStateType): MapStateToPropsType =>{\r\n    return{\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch) : MapDispatchToPropsType =>{\r\n    return{\r\n        sendMessage: (newMessageBody: string)=>{\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = compose<ComponentType>(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Dialogs);\r\n\r\nexport default DialogsContainer;","import classes from './Dialogs.module.css'\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogItems} from \"./DialogItem/DialogItem\";\r\nimport React from \"react\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AddMessageFormDataType, AddMessageReduxForm} from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\n\r\nexport const Dialogs = (props: DialogsPropsType) => {\r\n\r\n    const addMessage = (values: AddMessageFormDataType) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if(!props.isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogItems}>\r\n                {props.dialogsPage.dialogs.map(d => <DialogItems key={d.id} id={d.id} name={d.name}/>)}\r\n            </div>\r\n            <div>\r\n                <div className={classes.messages}>\r\n                    {props.dialogsPage.messages.map(m => <Message key={m.id} message={m.message} id={m.id}/>)}\r\n                </div>\r\n                <AddMessageReduxForm onSubmit={addMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"names":["Message","props","className","classes","message","DialogItems","to","id","name","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","compose","withAuthRedirect","connect","state","dialogsPage","isAuth","auth","dispatch","sendMessage","newMessageBody","sendMessageCreator","dialogs","map","d","messages","m","values"],"sourceRoot":""}